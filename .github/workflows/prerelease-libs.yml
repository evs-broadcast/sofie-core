name: Publish prerelease libraries

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint-packages:
    name: Lint Lib
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        package-name:
          - blueprints-integration
          - server-core-integration
          - shared-lib

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Prepare Environment
        run: |
          cd packages
          yarn install
          yarn lerna run --scope \*\*/${{ matrix.package-name }} --include-dependencies --stream build
        env:
          CI: true
      - name: Run typecheck and linter
        run: |
          cd packages/${{ matrix.package-name }}
          yarn lint
        env:
          CI: true

  test-packages:
    name: Test Lib
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        package-name:
          - blueprints-integration
          - server-core-integration
          - shared-lib
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Prepare Environment
        run: |
          cd packages
          yarn install
          yarn lerna run --scope \*\*/${{ matrix.package-name }} --include-dependencies --stream build
        env:
          CI: true
      - name: Run tests
        run: |
          cd packages/${{ matrix.package-name }}
          yarn unit
        env:
          CI: true

  prerelease-libs:
    name: Prerelease Lib
    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs:
      - test-packages

    strategy:
      fail-fast: false
      matrix:
        package-name:
          - blueprints-integration
          - server-core-integration
          - shared-lib

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Check release is possible
        id: do-publish
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "No Token"
          else
            echo "Publish prerelease"
            echo "publish=1" >> $GITHUB_OUTPUT
          fi
      - name: Prepare Environment
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          cd packages
          yarn install
        env:
          CI: true
      - name: Bump version
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          cd packages
          COMMIT_TIMESTAMP=$(git log -1 --pretty=format:%ct HEAD)
          COMMIT_DATE=$(date -d @$COMMIT_TIMESTAMP +%Y%m%d-%H%M%S)
          GIT_HASH=$(git rev-parse --short HEAD)
          PRERELEASE_TAG=nightly-$(echo "${{ github.ref_name }}" | sed -r 's/[^a-z0-9]+/-/gi')
          yarn set-version prerelease --preid $PRERELEASE_TAG-$COMMIT_DATE-$GIT_HASH
        env:
          CI: true
      - name: Build
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          cd packages
          yarn lerna run --scope \*\*/${{ matrix.package-name }} --include-dependencies --stream build
        env:
          CI: true
      - name: Modify dependencies to use npm packages
        run: node scripts/prepublish.js
      - name: Publish to NPM
        id: publish-npm
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          yarn config set npmAuthToken $NPM_AUTH_TOKEN

          cd packages/${{ matrix.package-name }}
          NEW_VERSION=$(node -p "require('./package.json').version")
          yarn npm publish --access=public --tag nightly

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "**Published:** $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          CI: true
